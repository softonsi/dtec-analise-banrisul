/* a) alteração inusitada nos padrões de vida e de comportamento do empregado ou do representante, sem causa aparente;*/ 
 
SELECT T1.CD_DOC_IDENTF_CLIE, T1.CD_TP_IDENTF_CLIE,    
'Análise: Regra 160 - Alteração inusitada do padrão de vida do empregado do Banco |' ||   
'Objetivo: a) alteração inusitada nos padrões de vida e de comportamento do empregado, do parceiro ou de prestador de serviços terceirizados, sem causa aparente. C.C. Bacen n. 4.001/2020, Art. 1º, Inciso XIII |' ||    
'Conclusão: Alteração inusitada nos padrões de vida e de comportamento do empregado ou do representante, sem causa aparente |' ||    
'Cliente: ' ||  T1.NM_CLIE || '|' ||   
CASE T1.CD_TP_IDENTF_CLIE    
	WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(T1.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(T1.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(T1.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(T1.CD_DOC_IDENTF_CLIE, 10, 2)    
	WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' ||SUBSTR(T1.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(T1.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(T1.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(T1.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(T1.CD_DOC_IDENTF_CLIE, 13, 2)     
	ELSE T1.CD_DOC_IDENTF_CLIE   
END   
|| '|' ||   
'Avaliação: Transações de funcionários |' ||   
'Mês/Ano calendário: ' || SUBSTR(TO_CHAR(:cd_lote),5,2) || '/' || SUBSTR(TO_CHAR(:cd_lote),1,4) ||  '|' ||  
'Período de consolidação (12 meses anteriores ao mês calendário): de ' || to_char(ADD_MONTHS((TO_DATE(TO_CHAR(:cd_lote), 'yyyy/mm')), -12), 'mm/yyyy') 
|| ' a ' ||   to_char(ADD_MONTHS((TO_DATE(TO_CHAR(:cd_lote), 'yyyy/mm')), -1), 'mm/yyyy') ||  '|' ||  
'Quantidade de meses transacionados (sem considerar o mês calendário): ' || REGEXP_COUNT(MESES,'\,') ||  '|' || 
--'Meses que o funcionário transacionou: ' || MESES ||  '|' || 
'Valor total de crédito no mês calendário: ' || COALESCE(TO_CHAR(VL_MES_CREDITO, 'L999G999G999G990D99'), 'Valor não cadastrado') || '|' ||  
'Valor médio mensal de créditos nos 12 meses anteriores ao mês calendário: ' || COALESCE(TO_CHAR((VL_12MES_CREDITO/12), 'L999G999G999G990D99'), 'Valor não cadastrado') || '|' ||  
'Valor total de débito no mês calendário: ' || COALESCE(TO_CHAR(VL_MES_DEBITO, 'L999G999G999G990D99'), 'Valor não cadastrado') || '|' ||  
'Valor médio mensal de débitos nos 12 meses anteriores ao mês calendário: ' || COALESCE(TO_CHAR((VL_12MES_DEBITO/12), 'L999G999G999G990D99'), 'Valor não cadastrado') || '|' ||  
'Parâmetro que indica valor mínimo para Crédito consolidado (pm_ValorMinimoCredito): ' || COALESCE((SELECT TO_CHAR(:pm_ValorMinimoCredito, 'L999G999G999G990D99') FROM DUAL),'Parâmetro não cadastrado') || '|' ||    
'Parâmetro percentual para flexibilização da média de crédito do cliente (pm_PercCredito): ' || COALESCE((SELECT TO_CHAR(:pm_PercCredito, '999999990D99')  || '%' FROM DUAL),'Parâmetro não cadastrado') || '|'  ||  
'Parâmetro que indica valor mínimo para Débito consolidado (pm_ValorMinimoDebito): ' || COALESCE((SELECT TO_CHAR(:pm_ValorMinimoDebito, 'L999G999G999G990D99') FROM DUAL),'Parâmetro não cadastrado') || '|' ||    
'Parâmetro percentual para flexibilização da média de débito do cliente (pm_PercDebito): ' || COALESCE((SELECT TO_CHAR(:pm_PercDebito, '999999990D99') || '%' FROM DUAL),'Parâmetro não cadastrado') || '|'     
AS DS_INF_ANLSE   
FROM (SELECT T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, MAX(T.NM_CLIE) NM_CLIE,      
      xmlcast(  xmlagg(xmlelement(outros,        
           case when cd_mes_ano >= to_char(ADD_MONTHS((TO_DATE(TO_CHAR(:cd_lote), 'yyyy/mm')), -11), 'yyyymm') 
                 and cd_mes_ano <= to_char(ADD_MONTHS((TO_DATE(TO_CHAR(:cd_lote), 'yyyy/mm')), 0), 'yyyymm')
           then TO_CHAR(CD_MES_ANO)  || ', ' end
       )  order by CD_MES_ANO) as clob)  MESES,  
      SUM(T.VL_MES_CREDITO) VL_MES_CREDITO, SUM(T.VL_12MES_CREDITO) VL_12MES_CREDITO,
      SUM(T.VL_MES_DEBITO) VL_MES_DEBITO, SUM(T.VL_12MES_DEBITO) VL_12MES_DEBITO 
FROM (
SELECT T.CD_MES_ANO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, MAX(T.NM_CLIE) NM_CLIE, 
      SUM(T.VL_MES_CREDITO) VL_MES_CREDITO, SUM(T.VL_12MES_CREDITO) VL_12MES_CREDITO,
      SUM(T.VL_MES_DEBITO) VL_MES_DEBITO, SUM(T.VL_12MES_DEBITO) VL_12MES_DEBITO  
FROM (SELECT T.CD_MES_ANO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, MAX(T.NM_CLIE) NM_CLIE, 
            CASE WHEN T.CD_MES_ANO = :cd_lote  AND T.CD_NATUR_OPER = 1 THEN SUM(T.VL_OPER) END VL_MES_CREDITO,  
            CASE WHEN TO_CHAR(T.CD_MES_ANO) >= TO_CHAR(ADD_MONTHS(TO_DATE(TO_CHAR(:cd_lote) || '01', 'YYYY-MM-DD'), -12), 'yyyymm') AND T.CD_MES_ANO < :cd_lote AND T.CD_NATUR_OPER = 1 THEN SUM(T.VL_OPER) END VL_12MES_CREDITO,  
            CASE WHEN T.CD_MES_ANO = :cd_lote  AND T.CD_NATUR_OPER = 2 THEN SUM(T.VL_OPER) END VL_MES_DEBITO,  
            CASE WHEN TO_CHAR(T.CD_MES_ANO) >= TO_CHAR(ADD_MONTHS(TO_DATE(TO_CHAR(:cd_lote) || '01', 'YYYY-MM-DD'), -12), 'yyyymm') AND T.CD_MES_ANO < :cd_lote AND T.CD_NATUR_OPER = 2 THEN SUM(T.VL_OPER) END VL_12MES_DEBITO  
     FROM TB_TRANS T 
            WHERE T.FL_FUNCIONARIO = 1 
            AND T.CD_TP_PESSOA   = 'F' 
            AND T.DT_TRANS >= ADD_MONTHS((TO_DATE(TO_CHAR(:cd_lote), 'yyyy/mm')), -12) 
            AND T.DT_TRANS < ADD_MONTHS((TO_DATE(TO_CHAR(:cd_lote), 'yyyy/mm')), 1) 
            AND T.FL_ANALISADO = 1 
            AND T.CD_NATUR_OPER is not null 
            GROUP BY T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, CD_MES_ANO, CD_NATUR_OPER 
    ) T     
GROUP BY T.CD_MES_ANO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE   
) T
GROUP BY T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE
     ) T1   
WHERE REGEXP_COUNT(MESES,'\,') = 12
  AND 
  (
     (T1.VL_MES_CREDITO > ((T1.VL_12MES_CREDITO/12) * (:pm_PercCredito/100)) AND T1.VL_MES_CREDITO > (:pm_ValorMinimoCredito) ) 
      OR 
     (T1.VL_MES_DEBITO > ((T1.VL_12MES_DEBITO/12) * (:pm_PercDebito/100))  AND T1.VL_MES_DEBITO > (:pm_ValorMinimoDebito) )
  ) 
  
  