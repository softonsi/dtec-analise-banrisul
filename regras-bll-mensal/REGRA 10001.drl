SELECT t.DT_APONTAMENTO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE,  
(QTDE * (SELECT VL_PARAM FROM TB_REGRA_PARAMETRO WHERE CD_REGRA = 10001 AND CD_VERSAO_SISTEMA = 3 AND NM_CAMPO_PARAM = 'pm_VPenalizacao')) PENALIZACAO,     
'Análise: Regra 10001 - Penalização agência. |' ||     
'Objetivo: Penalizar cliente com ocorrência(s) de apontamento(s) não justificado(s) pela agência. |' ||     
'Conclusão: Cliente penalizado por ocorrência(s) de apontamento(s) não justificado(s) pela agência. |' ||     
CASE T.CD_TP_IDENTF_CLIE     
	WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 10, 2)     
	WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' ||SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(T.CD_DOC_IDENTF_CLIE, 13, 2)      
	ELSE T.CD_DOC_IDENTF_CLIE     
END     
|| '|' ||     
'Mês e ano do apontamento: ' || TO_CHAR(DT_APONTAMENTO,'MM-YYYY') ||  '|' ||     
'Período de análise : de ' ||  SUBSTR(INIC,5,6) || '-' || SUBSTR(INIC,1,4) || ' até ' || SUBSTR(FIM,5,6) || '-' || SUBSTR(FIM,1,4) || '|' || 
'Mês e ano da última análise finalizada pelo analista no período de análise acima (quando não houver, data de início do período de análise): ' || SUBSTR(DT_ULTM_ANLSE_FINALZ,5,6) || '-' || SUBSTR(DT_ULTM_ANLSE_FINALZ,1,4)   || '|' || 
'Quantidade de ocorrências: ' || to_char(QTDE) ||  '|' ||  
'Apontamento(s) penalizado(s): ' ||  SJUTF || '|' ||  
'Penalização: ' || TO_CHAR(QTDE * (SELECT VL_PARAM FROM TB_REGRA_PARAMETRO WHERE CD_REGRA = 10001 AND CD_VERSAO_SISTEMA = 3 AND NM_CAMPO_PARAM = 'pm_VPenalizacao')) || '|' ||   
COALESCE((SELECT DS_CAMPO_PARAM || ' (' || NM_CAMPO_PARAM || '):' || TO_CHAR(VL_PARAM) FROM TB_REGRA_PARAMETRO WHERE CD_REGRA = 10001 AND CD_VERSAO_SISTEMA = 3 AND NM_CAMPO_PARAM = 'pm_QMesRecuo'),'Parâmetro não cadastrado|' ) || '|' || 
COALESCE((SELECT DS_CAMPO_PARAM || ' (' || NM_CAMPO_PARAM || '):' || TO_CHAR(VL_PARAM) FROM TB_REGRA_PARAMETRO WHERE CD_REGRA = 10001 AND CD_VERSAO_SISTEMA = 3 AND NM_CAMPO_PARAM = 'pm_VPenalizacao'),'Parâmetro não cadastrado|' ) || '|'  
AS DS_INF_ANLSE      
FROM  ( 
SELECT A.DT_APONTAMENTO, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.DT_ULTM_ANLSE_FINALZ, A.VL_APONTAMENTO, A.CD_ANO_MES, A.INIC, A.FIM, 
xmlcast(  xmlagg(xmlelement(data,  
to_char(A.DT_APONT_SJUSTF,'mm-yyyy') || ' ' || (Select NM_STTUS_EVENTO FROM TB_STTUS_EVENTO E WHERE E.CD_STTUS_EVENTO = A.CD_STTUS_EVENTO_ATUAL) || ', ')  order by A.DT_APONT_SJUSTF) as clob) SJUTF, 
COUNT(*) QTDE 
FROM ( 
/* 2- a partir dessa data obter TODOS apontamento do cliente está marcado como NÃO Justificado pela Agência */ 
SELECT A.DT_APONTAMENTO, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.DT_ULTM_ANLSE_FINALZ, A.VL_APONTAMENTO, A.CD_ANO_MES, A.INIC, A.FIM, 
  TRUNC(AH.DT_APONTAMENTO) DT_APONT_SJUSTF, AH.CD_STTUS_EVENTO_ATUAL 
FROM TB_APONTAMENTO_HIST AH 
INNER JOIN 
( 
/* 1-A regra deverá recuar N meses (valor parametrizado) em relação à data de análise, obter a data da última análise finalizada pelo analista*/ 
SELECT A.DT_APONTAMENTO, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.VL_APONTAMENTO, MAX(A.DT_ULTM_ANLSE_FINALZ) DT_ULTM_ANLSE_FINALZ, CD_ANO_MES, INIC, FIM 
FROM ( 
SELECT A.DT_APONTAMENTO, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.VL_APONTAMENTO, CD_ANO_MES, INIC, FIM,   
CASE WHEN FL_SUSP_LD = 1 AND CD_STTUS_EVENTO_ATUAL <> 30  
     THEN to_char(DT_ULTM_ANLSE_FINALZ, 'YYYYMM')  
     ELSE INIC 
END DT_ULTM_ANLSE_FINALZ 
FROM ( 
SELECT A.DT_APONTAMENTO, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.VL_APONTAMENTO, H.FL_SUSP_LD, H.CD_STTUS_EVENTO_ATUAL, H.DT_APONTAMENTO DT_ULTM_ANLSE_FINALZ, 
  TO_CHAR(A.DT_APONTAMENTO, 'YYYYMM') CD_ANO_MES,  
  TO_CHAR(ADD_MONTHS(trunc(A.DT_APONTAMENTO), (SELECT (VL_PARAM) * (-1) FROM TB_REGRA_PARAMETRO WHERE CD_REGRA = 10001 AND CD_VERSAO_SISTEMA = 3 AND NM_CAMPO_PARAM = 'pm_QMesRecuo')), 'YYYYMM') INIC, 
  TO_CHAR(ADD_MONTHS(trunc(A.DT_APONTAMENTO), - 1), 'YYYYMM') FIM 
FROM 
(SELECT DT_APONTAMENTO, CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE, VL_APONTAMENTO  
 FROM TB_APONTAMENTO 
 WHERE CD_STTUS_EVENTO_ATUAL = 0  
   AND FL_SUSP_LD = 1 
   AND TO_CHAR(DT_APONTAMENTO, 'YYYYMM') = :cd_lote 
 ) A   
LEFT JOIN  TB_APONTAMENTO_HIST H   
ON A.CD_DOC_IDENTF_CLIE = H.CD_DOC_IDENTF_CLIE AND A.CD_TP_IDENTF_CLIE = H.CD_TP_IDENTF_CLIE  
WHERE TO_CHAR(H.DT_APONTAMENTO, 'YYYYMM') >= TO_CHAR(ADD_MONTHS(trunc(A.DT_APONTAMENTO), (SELECT (VL_PARAM) * (-1) FROM TB_REGRA_PARAMETRO WHERE CD_REGRA = 10001 AND CD_VERSAO_SISTEMA = 3 AND NM_CAMPO_PARAM = 'pm_QMesRecuo')), 'YYYYMM')  
  AND TO_CHAR(H.DT_APONTAMENTO, 'YYYYMM') <= TO_CHAR(ADD_MONTHS(trunc(A.DT_APONTAMENTO), - 1), 'YYYYMM')      
) A ) A  
GROUP BY A.DT_APONTAMENTO, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.VL_APONTAMENTO,  A.CD_ANO_MES, A.INIC, A.FIM 
/* fecha 1 */ 
) A 
ON A.CD_DOC_IDENTF_CLIE = AH.CD_DOC_IDENTF_CLIE        AND  
   A.CD_TP_IDENTF_CLIE = AH.CD_TP_IDENTF_CLIE          AND  
   TO_CHAR(AH.DT_APONTAMENTO, 'YYYYMM') >= (A.DT_ULTM_ANLSE_FINALZ) AND 
   TO_CHAR(AH.DT_APONTAMENTO, 'YYYYMM') < TO_CHAR(A.DT_APONTAMENTO, 'YYYYMM') 
AND AH.CD_STTUS_EVENTO_ATUAL = 30 
/* 2- fim */ 
AND NOT EXISTS  
  (SELECT 1 FROM TB_EVENTO_HIST E 
   WHERE E.CD_DOC_IDENTF_CLIE = A.CD_DOC_IDENTF_CLIE  
     AND E.CD_TP_IDENTF_CLIE  = A.CD_TP_IDENTF_CLIE   
     AND E.DT_APONTAMENTO     = AH.DT_APONTAMENTO 
     AND E.CD_STTUS_EVENTO = 6 
     AND E.FL_JUSTF_MOVTO = 1)      
AND NOT EXISTS  
  (SELECT 1 FROM TB_APONTAMENTO_HIST E 
   WHERE E.CD_DOC_IDENTF_CLIE = A.CD_DOC_IDENTF_CLIE  
     AND E.CD_TP_IDENTF_CLIE  = A.CD_TP_IDENTF_CLIE   
     AND TO_CHAR(E.DT_APONTAMENTO, 'YYYYMM') = TO_CHAR(AH.DT_APONTAMENTO, 'YYYYMM') 
     AND E.CD_LOTE = 0 
  )       
AND  
(EXISTS (SELECT 1 FROM TB_EVENTO_HIST E 
  WHERE E.CD_DOC_IDENTF_CLIE = A.CD_DOC_IDENTF_CLIE  
    AND E.CD_TP_IDENTF_CLIE  = A.CD_TP_IDENTF_CLIE   
    AND E.DT_APONTAMENTO     = AH.DT_APONTAMENTO 
    AND E.CD_STTUS_EVENTO = 6  
    AND E.FL_JUSTF_MOVTO = 0)    
  OR      
  NOT EXISTS  
  (SELECT 1 FROM TB_EVENTO_HIST E 
   WHERE E.CD_DOC_IDENTF_CLIE = A.CD_DOC_IDENTF_CLIE  
     AND E.CD_TP_IDENTF_CLIE  = A.CD_TP_IDENTF_CLIE   
     AND E.DT_APONTAMENTO     = AH.DT_APONTAMENTO 
     AND E.FL_JUSTF_MOVTO IS not NULL /*NINGUÉM ANALISOU */ 
     )    
 ) 
) A 
GROUP BY A.DT_APONTAMENTO, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.DT_ULTM_ANLSE_FINALZ, A.VL_APONTAMENTO, A.CD_ANO_MES, A.INIC, A.FIM 
) T 

/* a regra verifica se alguém justificou o apontamento, independente da ordem cronológica.*/
