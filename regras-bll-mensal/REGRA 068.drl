SELECT DISTINCT T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE,      
'Análise: Regra 68 - Movimentação habitual para PEP |' ||     
'Objetivo: s) Movimentação habitual de recursos financeiros de ou para pessoas expostas politicamente ou pessoas de relacionamento próximo, não justificada por eventos econômicos. C.C. Bacen n. 3.542/2012, Art. 1º, Inciso IV |' ||    
'Conclusão: Movimentação habitual de recursos financeiros de ou para pessoas expostas politicamente ou pessoas de relacionamento próximo, não justificada por eventos econômicos por pelo menos 3 meses consecutivos fechados |' ||    
'Cliente: ' ||  MAX(T.NM_CLIE) || '|' ||    
CASE T.CD_TP_IDENTF_CLIE     
	WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 10, 2)     
	WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(T.CD_DOC_IDENTF_CLIE, 13, 2)      
	ELSE T.CD_DOC_IDENTF_CLIE     
END     
|| '|' ||     
'Mês/Ano: ' || SUBSTR(CD_MES_ANO_REF,5,2) || '/' || SUBSTR(CD_MES_ANO_REF,1,4) ||  '|' ||    
'Análise: Quantidade de movimetação(ões) para PEP' ||  '|' ||    
SUBSTR(CD_MES_ANO_REF,5,2) || '/' || SUBSTR(CD_MES_ANO_REF,3,2)      || ': ' || SUM(QD_1) || '|' ||    
TO_CHAR(ADD_MONTHS(TO_DATE( CD_MES_ANO_REF || '01', 'YYYY-MM-DD'), -1),'MM/YY') || ': ' || SUM(QD_2) || '|' ||    
TO_CHAR(ADD_MONTHS(TO_DATE( CD_MES_ANO_REF || '01', 'YYYY-MM-DD'), -2),'MM/YY') || ': ' || SUM(QD_3) || '|' ||    
'Parâmetro que representa quantidade de transferências para PEP, que deve ser apontado pela regra (pm_QtdeMovPEP): ' || COALESCE((':pm_QtdeMovPPE'),'Parâmetro não cadastrado') || '|'    
AS DS_INF_ANLSE     
FROM (  
SELECT C.CD_DOC_IDENTF_CLIE, C.CD_TP_IDENTF_CLIE, MAX(C.NM_CLIE) NM_CLIE, MAX(C.CD_MES_ANO) CD_MES_ANO_REF, 
CASE T1.CD_MES_ANO WHEN MAX(C.CD_MES_ANO) THEN COUNT(*) END QD_1,  
CASE to_char(T1.CD_MES_ANO) WHEN TO_CHAR(ADD_MONTHS(TO_DATE( TO_CHAR(MAX(C.CD_MES_ANO)) || '01', 'YYYY-MM-DD'), -1), 'yyyymm') THEN COUNT(*) END QD_2,  
CASE to_char(T1.CD_MES_ANO) WHEN TO_CHAR(ADD_MONTHS(TO_DATE( TO_CHAR(MAX(C.CD_MES_ANO)) || '01', 'YYYY-MM-DD'), -2), 'yyyymm') THEN COUNT(*) END QD_3  
FROM TB_TRANS T1  
INNER JOIN 
(SELECT CD_MES_ANO, CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE, MAX(NM_CLIE) NM_CLIE FROM TB_TRANS 
  WHERE DT_TRANS >=  to_date(to_char(:cd_lote), 'yyyy/mm')  
    AND DT_TRANS < add_months((to_date(to_char(:cd_lote), 'yyyy/mm')), 1) 
    AND FL_ANALISADO = 1 
 GROUP BY CD_MES_ANO, CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE) C   
      ON C.CD_DOC_IDENTF_CLIE = T1.CD_DOC_IDENTF_CLIE        
  WHERE CD_DOC_IDENTF_DESTORIG IS NOT NULL 
  AND T1.FL_ANALISADO = 1 
  AND EXISTS (SELECT 1 FROM TB_PPE WHERE CD_DOC_IDENTF IS NOT NULL AND CD_DOC_IDENTF = T1.CD_DOC_IDENTF_DESTORIG)      
GROUP BY C.CD_DOC_IDENTF_CLIE, C.CD_TP_IDENTF_CLIE, T1.CD_MES_ANO

) T  
GROUP BY CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE, CD_MES_ANO_REF  
HAVING SUM(QD_1) > (:pm_QtdeMovPPE)   
   AND SUM(QD_2) > (:pm_QtdeMovPPE)   
   AND SUM(QD_3) > (:pm_QtdeMovPPE)   
 
 