SELECT LAST_DAY(TRUNC(T.DT_TRANS)) DT_APONTAMENTO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE,       
(SELECT 'Análise: Regra ' || TO_CHAR(CD_REGRA) || ' - ' || NM_REGRA || '| Objetivo: ' || DS_REGRA || '|' FROM TB_REGRA WHERE CD_REGRA = 4001 AND CD_VERSAO_SISTEMA = 4) || 
'Cliente: ' ||  T.NM_CLIE || '|' ||     
CASE T.CD_TP_IDENTF_CLIE     
	WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 10, 2)     
	WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' ||SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(T.CD_DOC_IDENTF_CLIE, 13, 2)      
	ELSE T.CD_DOC_IDENTF_CLIE     
END     
|| '|' ||     
'Lote: ' || TO_CHAR(T.CD_LOTE) || '|' ||    
'Data da Transação: ' || TO_CHAR(T.DT_TRANS,'DD/MM/YYYY') || '|' ||     
'Valor da Transação: ' || TO_CHAR(T.VL_OPER, 'L999G999G999G990D99') || '|' ||       
'Tipo da Transação: ' || T.CD_TP_OPER || COALESCE((SELECT '-' || NM_TP_OPER FROM TB_TP_OPER WHERE CD_TP_OPER = T.CD_TP_OPER), 'Tipo não cadastrado') || '|' ||      
'Forma da Transação: ' || T.CD_FORMA_OPER || COALESCE((SELECT '-' || NM_FORMA_OPER FROM TB_FORMA_OPER WHERE CD_FORMA_OPER = T.CD_FORMA_OPER), 'Forma não cadastrada') || '|' ||      
'Valor Renda: ' || COALESCE(TO_CHAR(T.VL_RENDA_FAT, 'L999G999G999G990D99'), 'Valor não cadastrado') || '|' ||       
'Ocupação e média de crédito: ' ||  COALESCE(OCUPACAO, 'Ocupação não cadastrada')   || '|' ||    
COALESCE((':DS-pm_PercRenda' || ' (' || ':NM-pm_PercRenda' || '):' || :pm_PercRenda || '%'),'Parâmetro não cadastrado') || '|' ||
COALESCE((':DS-pm_ValorMinimoPF' || ' (' || ':NM-pm_ValorMinimoPF' || '):' || TO_CHAR(:pm_ValorMinimoPF, 'L999G999G999G990D99')),'Parâmetro não cadastrado') || '|' ||
COALESCE((':DS-pm_PercOcupacao' || ' (' || ':NM-pm_PercOcupacao' || '):' || :pm_PercOcupacao || '%'),'Parâmetro não cadastrado') || '|' 
AS DS_INF_ANLSE    
FROM 
( 
SELECT T.CD_TRANSACAO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, T.NM_CLIE, T.CD_LOTE, T.DT_TRANS, T.VL_OPER, T.CD_TP_OPER, T.CD_FORMA_OPER, T.VL_RENDA_FAT
,LISTAGG(COALESCE(NM_OCUP , TO_CHAR(R.CD_OCUP)) || ' ' || COALESCE(LTRIM(TO_CHAR(O.VL_MED_CREDITO, 'L999G999G999G990D99')),'Média não calculada'), '/ ') WITHIN GROUP (ORDER BY O.CD_OCUP desc) OCUPACAO 
FROM TB_TRANS_ANLSE T  
left JOIN TB_CLIE_RENDA R ON R.CD_DOC_IDENTF_CLIE = T.CD_DOC_IDENTF_CLIE  AND R.CD_TP_IDENTF_CLIE = T.CD_TP_IDENTF_CLIE  
left JOIN (SELECT O.CD_OCUP, O.NM_OCUP, M.VL_MED_CREDITO FROM TB_OCUP O LEFT JOIN TB_MED_OCUP M ON O.CD_OCUP = M.CD_OCUP) O ON R.CD_OCUP = O.CD_OCUP                         
WHERE T.CD_TP_PESSOA = 'F'      
AND T.CD_LOTE    = :cd_lote        
AND T.CD_SUBLOTE = :cd_sublote       
AND (T.CD_FORMA_OPER = 7 OR T.CD_TP_OPER = 17)      
AND T.VL_OPER IS NOT NULL      
AND T.VL_OPER > (:pm_ValorMinimoPF)         
AND (T.VL_OPER > (O.VL_MED_CREDITO * (:pm_PercOcupacao/100))      
     OR  
     (T.VL_RENDA_FAT IS NOT NULL AND      
       T.VL_OPER > (T.VL_RENDA_FAT * (:pm_PercRenda/100)) )      
     OR  
     T.VL_RENDA_FAT IS NULL      
    )      
GROUP BY T.CD_TRANSACAO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, T.NM_CLIE, T.CD_LOTE, T.DT_TRANS, T.VL_OPER, T.CD_TP_OPER, T.CD_FORMA_OPER, T.VL_RENDA_FAT  
) T      
UNION ALL    
SELECT LAST_DAY(TRUNC(T.DT_TRANS)) DT_APONTAMENTO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE,       
(SELECT 'Análise: Regra ' || TO_CHAR(CD_REGRA) || ' - ' || NM_REGRA || '| Objetivo: ' || DS_REGRA || '|' FROM TB_REGRA WHERE CD_REGRA = 4001 AND CD_VERSAO_SISTEMA = 4) || 
'Cliente: ' ||  T.NM_CLIE || '|' ||     
CASE T.CD_TP_IDENTF_CLIE     
	WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 10, 2)     
	WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' ||SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(T.CD_DOC_IDENTF_CLIE, 13, 2)      
	ELSE T.CD_DOC_IDENTF_CLIE     
END     
|| '|' ||     
'Lote: ' || TO_CHAR(T.CD_LOTE) || '|' ||    
'Data da Transação: ' || TO_CHAR(T.DT_TRANS,'DD/MM/YYYY') || '|' ||     
'Valor da Transação: ' || TO_CHAR(T.VL_OPER, 'L999G999G999G990D99') || '|' ||       
'Tipo da Transação: ' || T.CD_TP_OPER || COALESCE((SELECT '-' || NM_TP_OPER FROM TB_TP_OPER WHERE CD_TP_OPER = T.CD_TP_OPER), 'Tipo não cadastrado') || '|' ||      
'Forma da Transação: ' || T.CD_FORMA_OPER || COALESCE((SELECT '-' || NM_FORMA_OPER FROM TB_FORMA_OPER WHERE CD_FORMA_OPER = T.CD_FORMA_OPER), 'Forma não cadastrada') || '|' ||      
'Ramo de Atividade: ' || COALESCE((SELECT TO_CHAR(R.NM_RAMO_ATIVID) FROM TB_RAMO_ATIVID R      
                                   WHERE T.CD_RAMO_ATIVID = R.CD_RAMO_ATIVID),'Ramo de Atividade não cadastrado') || '|' ||      
'Valor Médio de Crédito do Ramo de Atividade: ' || COALESCE(TO_CHAR(R.VL_MED_CREDITO, 'L999G999G999G990D99'),'Valor não cadastrado.') || '|' ||      
'Valor Faturamento: ' || COALESCE(TO_CHAR(T.VL_RENDA_FAT, 'L999G999G999G990D99'), 'Valor não cadastrado') || '|' ||   
COALESCE((':DS-pm_PercFatmt' || ' (' || ':NM-pm_PercFatmt' || '):' || :pm_PercFatmt || '%'),'Parâmetro não cadastrado') || '|' ||
COALESCE((':DS-pm_ValorMinimoPJ' || ' (' || ':NM-pm_ValorMinimoPJ' || '):' || TO_CHAR(:pm_ValorMinimoPJ, 'L999G999G999G990D99')),'Parâmetro não cadastrado') || '|' ||
COALESCE((':DS-pm_PercRamoAtividade' || ' (' || ':NM-pm_PercRamoAtividade' || '):' || :pm_PercRamoAtividade || '%'),'Parâmetro não cadastrado') || '|' 
AS DS_INF_ANLSE      
FROM TB_TRANS_ANLSE T  left JOIN TB_MED_RAMO_ATIVID R    
                       ON T.CD_RAMO_ATIVID = R.CD_RAMO_ATIVID    
WHERE T.CD_TP_PESSOA = 'J'      
AND T.CD_LOTE    = :cd_lote       
AND T.CD_SUBLOTE = :cd_sublote      
AND (T.CD_FORMA_OPER = 7 OR T.CD_TP_OPER = 17 )      
AND T.VL_OPER IS NOT NULL      
AND T.VL_OPER > (:pm_ValorMinimoPJ)      
AND ((R.VL_MED_CREDITO IS NOT NULL       
      AND T.VL_OPER > (R.VL_MED_CREDITO * (:pm_PercRamoAtividade/100))       
     )      
     OR      
     (T.VL_RENDA_FAT IS NOT NULL AND T.VL_OPER > (T.VL_RENDA_FAT * (:pm_PercFatmt/100)))        
     OR      
     T.VL_RENDA_FAT IS NULL      
    )   


