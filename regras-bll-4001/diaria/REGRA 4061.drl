/*-DIARIA-*/ 
SELECT LAST_DAY(DT_TRANS) DT_APONTAMENTO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, 
(SELECT 'Análise: Regra ' || TO_CHAR(CD_REGRA) || ' - ' || NM_REGRA || '| Objetivo: ' || DS_REGRA || '|' FROM TB_REGRA WHERE CD_REGRA = 4061 AND CD_VERSAO_SISTEMA = 4) || 
'Cliente: ' || T.NM_CLIE || '|' || 
CASE T.CD_TP_IDENTF_CLIE 
     WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 10, 2) 
     WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(T.CD_DOC_IDENTF_CLIE, 13, 2) 
     ELSE T.CD_DOC_IDENTF_CLIE 
END 
 || '|' ||  
'Lote: ' || COALESCE(TO_CHAR(T.CD_LOTE), 'Não cadastrado') || '|' ||  
'Data de referência ' || TO_CHAR(DT_TRANS,'DD/MM/YY') || '|' || 
'Quantidade de ocorrências de limites ultrapassados: ' || TO_CHAR(QT_TOTAL) || '|' || 
'Detalhes: | ' || FATURAS  || '|' || 
COALESCE((':DS-pm_Qmeses' || ' (' || ':NM-pm_Qmeses' || '):' || :pm_Qmeses),'Parâmetro não cadastrado' ) || '|' ||   
COALESCE((':DS-pm_QOcorrencia' || ' (' || ':NM-pm_QOcorrencia' || '):' || :pm_QOcorrencia),'Parâmetro não cadastrado' ) || '|' ||   
COALESCE((':DS-pm_percLimite' || ' (' || ':NM-pm_percLimite' || '):' || :pm_percLimite || '%'),'Parâmetro não cadastrado' ) || '|' 
AS DS_INF_ANLSE   
FROM 
( 
SELECT A.DT_TRANS, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.NM_CLIE, A.CD_LOTE,  COUNT(*) QT_TOTAL, 
xmlcast(  xmlagg(xmlelement(fat,  
	'Cartão: '                 || TO_CHAR(T.CD_CARTAO) ||  
	', Fechamento da fatura '  || COALESCE(TO_CHAR(T.DT_FECHA_FATURA),'Data não preenchida') ||  
	', Data do pagamento '     || TO_CHAR(T.DT_TRANS,'DD/MM/YY') ||  
	', Valor da fatura '       || LTRIM(TO_CHAR(T.VL_FATURA, 'L999G999G999G990D99')) ||  
	', Valor pago '            || LTRIM(TO_CHAR(COALESCE(T.VL_OPER,0), 'L999G999G999G990D99')) ||  
	', Valor comprometido '    || LTRIM(TO_CHAR(COALESCE(T.VL_COMPROMET,0), 'L999G999G999G990D99')) ||  
	', Valor do saldo credor ' || LTRIM(TO_CHAR(COALESCE(T.VL_SLD_CREDOR,0), 'L999G999G999G990D99')) ||  
	', Valor Limite cartão '   || LTRIM(TO_CHAR(T.VL_LIM_CARTAO), 'L999G999G999G990D99') || '| '  
)  order by TO_CHAR(T.CD_CARTAO)) as clob) FATURAS 
FROM TB_TRANS T 
INNER JOIN 
(SELECT TRUNC(DT_TRANS) DT_TRANS, CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE, NM_CLIE, CD_LOTE 
 FROM TB_TRANS_ANLSE A 
 WHERE  A.CD_TP_OPER = 30	/*Pagamento de Fatura*/ 
  AND A.CD_LOTE = :cd_lote AND A.CD_SUBLOTE = :cd_sublote 
 GROUP BY TRUNC(DT_TRANS), CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE, NM_CLIE, CD_LOTE 
 ) A 
 ON   TRUNC(T.DT_TRANS) >= ADD_MONTHS( A.DT_TRANS, ((-1) * :pm_Qmeses)) 
  AND TRUNC(T.DT_TRANS) <= A.DT_TRANS 
  AND T.CD_DOC_IDENTF_CLIE = A.CD_DOC_IDENTF_CLIE 
  AND T.CD_TP_IDENTF_CLIE  = A.CD_TP_IDENTF_CLIE 
WHERE T.FL_ANALISADO = 1   
   AND T.CD_TP_OPER = 30	/*Pagamento de Fatura*/    
   AND T.VL_FATURA IS NOT NULL 
   AND T.VL_LIM_CARTAO IS NOT NULL	   
   AND T.CD_CARTAO IS NOT NULL 
   AND ((T.VL_FATURA + COALESCE(T.VL_COMPROMET,0)) - COALESCE(T.VL_SLD_CREDOR,0)) >= (T.VL_LIM_CARTAO * (:pm_percLimite/100))    
GROUP BY A.DT_TRANS, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.NM_CLIE,  A.CD_LOTE ) T 
WHERE QT_TOTAL >= (:pm_QOcorrencia) 
 
UNION all 
 
 
SELECT LAST_DAY(T.DT_TRANS) DT_APONTAMENTO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, 
TO_CLOB ((SELECT 'Análise: Regra ' || TO_CHAR(CD_REGRA) || ' - ' || NM_REGRA || '| Objetivo: ' || DS_REGRA || '|' FROM TB_REGRA WHERE CD_REGRA = 4061 AND CD_VERSAO_SISTEMA = 4) ||'Cliente: ' || T.NM_CLIE || '|' || 
'Cliente: ' || T.NM_CLIE || '|' || 
CASE T.CD_TP_IDENTF_CLIE 
     WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 10, 2) 
     WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(T.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(T.CD_DOC_IDENTF_CLIE, 13, 2) 
     ELSE T.CD_DOC_IDENTF_CLIE 
END 
 || '|' ||  
'Lote: ' || COALESCE(TO_CHAR(T.CD_LOTE), 'Não cadastrado') || '|' ||  
'Data de referência ' || TO_CHAR(DT_TRANS,'DD/MM/YY') || '|' || 
'Desvio padrão do limite : ' || TO_CHAR(T.DESVIO) || '|' || 
COALESCE((':DS-pm_valorDesvioPadrao' || ' (' || ':NM-pm_valorDesvioPadrao' || '):' || TO_CHAR(:pm_valorDesvioPadrao, 'L999G999G999G990D99')),'Parâmetro não cadastrado' ) || '|'   )
AS DS_INF_ANLSE   
FROM 
(SELECT A.CD_LOTE, TRUNC(A.DT_TRANS) DT_TRANS, A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.NM_CLIE,   STDDEV(T.VL_LIM_CARTAO) DESVIO 
	 FROM TB_TRANS  T   
	 INNER JOIN TB_TRANS_ANLSE  A   
	 ON    TRUNC(T.DT_TRANS) >= ADD_MONTHS( A.DT_TRANS, ((-1) * :pm_Qmeses)) 
       AND TRUNC(T.DT_TRANS) <= A.DT_TRANS 
       AND T.CD_DOC_IDENTF_CLIE = A.CD_DOC_IDENTF_CLIE  
       AND T.CD_TP_IDENTF_CLIE  = A.CD_TP_IDENTF_CLIE 
       AND T.CD_TP_OPER = 30	/*Pagamento de Fatura*/ 
	   AND A.CD_TP_OPER = 30 
       AND A.CD_LOTE = :cd_lote AND A.CD_SUBLOTE = :cd_sublote 
	   GROUP BY A.CD_LOTE, TRUNC(A.DT_TRANS), A.CD_DOC_IDENTF_CLIE, A.CD_TP_IDENTF_CLIE, A.NM_CLIE 
	   HAVING STDDEV(T.VL_LIM_CARTAO) >= (:pm_valorDesvioPadrao) 
	) T  