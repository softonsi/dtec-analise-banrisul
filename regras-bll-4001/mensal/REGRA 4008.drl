SELECT SAQUE.CD_DOC_IDENTF_CLIE,SAQUE.CD_TP_IDENTF_CLIE,   
(SELECT 'Análise: Regra ' || TO_CHAR(CD_REGRA) || ' - ' || NM_REGRA || '| Objetivo: ' || DS_REGRA || '|' FROM TB_REGRA WHERE CD_REGRA = 4008 AND CD_VERSAO_SISTEMA = 4) ||  
'Cliente: ' ||  SAQUE.NM_CLIE || '|' || 
CASE SAQUE.CD_TP_IDENTF_CLIE  
	WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 10, 2)  
	WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' ||SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 13, 2)   
	ELSE SAQUE.CD_DOC_IDENTF_CLIE  
END  
|| '|' ||   
'Saque-Lote referente: ' || TO_CHAR(SAQUE.CD_LOTE)  || '|' || 
'Saque-Valor da Total: ' || TO_CHAR(VL_SAQUE, 'L999G999G999G990D99') || '|' ||    
'Saque-Quantidade: ' || TO_CHAR(Q_SAQUE) || '|' || 
'Saque-lista de saques: ' || SAQUES || '|' ||   
 
'Crédito-Valor da Total: ' || TO_CHAR(VL_CREDITO, 'L999G999G999G990D99') || '|' ||    
'Crédito-Quantidade: ' || TO_CHAR(Q_CREDITO) || '|' || 
'Crédito-Quantidade de origens diferentes: ' || TO_CHAR(QORIGENS_diferentes) || '|' || 
'Crédito-Documento de identificação das origens: ' || Origens || '|' || 
 
COALESCE((':DS-pm_ValorMinimo_PF' || ' (' || ':NM-pm_ValorMinimo_PF' || '):' || TO_CHAR(:pm_ValorMinimo_PF, 'L999G999G999G990D99')),'Parâmetro não cadastrado') || '|' ||
COALESCE((':DS-pm_QtdeOrigemDistintasPF' || ' (' || ':NM-pm_QtdeOrigemDistintasPF' || '):' || :pm_QtdeOrigemDistintasPF),'Parâmetro não cadastrado') || '|' 
AS DS_INF_ANLSE  
FROM ( 
SELECT MAX(CD_LOTE) CD_LOTE, MAX(NM_CLIE) NM_CLIE, CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE, SUM(VL_OPER) VL_SAQUE, 
xmlcast(  xmlagg(xmlelement(outros,  LTRIM(TO_CHAR(VL_OPER, 'L999G999G999G990D99'))  || '/ ')  order by VL_OPER) as clob) SAQUES,   
COUNT(*) Q_SAQUE   
FROM TB_TRANS_ANLSE  
WHERE DT_TRANS >=  to_date(to_char(:cd_lote), 'yyyy/mm')  
  AND DT_TRANS < add_months((to_date(to_char(:cd_lote), 'yyyy/mm')), 1) 
  AND CD_SUBLOTE = :cd_sublote
  AND CD_NATUR_OPER = 2 /*debito*/  
  AND CD_TP_OPER    = 7 /*saque*/  
  AND CD_FORMA_OPER = 7 /*especie*/  
  AND CD_TP_PESSOA  = 'F'  
  AND VL_OPER IS NOT NULL  
GROUP BY CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE  
HAVING SUM(VL_OPER) > (:pm_ValorMinimo_PF)  
) SAQUE  
INNER JOIN  
(SELECT T2.CD_DOC_IDENTF_CLIE, T2.CD_TP_IDENTF_CLIE, LISTAGG(TO_CHAR(T2.CD_DOC_IDENTF_DESTORIG), '/ ') WITHIN GROUP (ORDER BY T2.CD_DOC_IDENTF_CLIE desc) ORIGENS, COUNT(*) QORIGENS_diferentes, SUM(VL_CREDITO) VL_CREDITO, SUM(Q_CREDITO) Q_CREDITO 
 FROM (   
 SELECT T.CD_MES_ANO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, T.CD_DOC_IDENTF_DESTORIG, SUM(VL_OPER) VL_CREDITO, COUNT(*) Q_CREDITO
 FROM TB_TRANS T  
  WHERE T.DT_TRANS >=  to_date(to_char(:cd_lote), 'yyyy/mm')  
   AND T.DT_TRANS < add_months((to_date(to_char(:cd_lote), 'yyyy/mm')), 1) 
   AND T.CD_TP_PESSOA = 'F'
   AND T.FL_ANALISADO = 1  
   AND T.CD_DOC_IDENTF_DESTORIG IS NOT NULL 
   AND T.CD_DOC_IDENTF_CLIE <> T.CD_DOC_IDENTF_DESTORIG  
   AND T.CD_NATUR_OPER = 1  
   AND T.FL_ANALISADO = 1 
   AND T.CD_TP_OPER IN (5, 8, 9)  
 GROUP BY T.CD_MES_ANO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, T.CD_DOC_IDENTF_DESTORIG
  ) T2 
 GROUP BY T2.CD_DOC_IDENTF_CLIE, T2.CD_TP_IDENTF_CLIE 
 HAVING COUNT(*) > (:pm_QtdeOrigemDistintasPF)    
 ) CREDITO 
 ON SAQUE.CD_DOC_IDENTF_CLIE = CREDITO.CD_DOC_IDENTF_CLIE AND SAQUE.CD_TP_IDENTF_CLIE = CREDITO.CD_TP_IDENTF_CLIE 
 
UNION ALL 
 
SELECT SAQUE.CD_DOC_IDENTF_CLIE,SAQUE.CD_TP_IDENTF_CLIE,   
(SELECT 'Análise: Regra ' || TO_CHAR(CD_REGRA) || ' - ' || NM_REGRA || '| Objetivo: ' || DS_REGRA || '|' FROM TB_REGRA WHERE CD_REGRA = 4008 AND CD_VERSAO_SISTEMA = 4) ||  
'Cliente: ' ||  SAQUE.NM_CLIE || '|' || 
CASE SAQUE.CD_TP_IDENTF_CLIE  
	WHEN 2 THEN 'Tipo de Pessoa Física (CPF): ' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 1, 3) || '.' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 4, 3) || '.' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 7, 3) || '-' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 10, 2)  
	WHEN 3 THEN 'Tipo de Pessoa Jurídica (CNPJ): ' ||SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 1, 2) || '.' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 3, 3) || '.' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 6, 3) || '/' || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 9, 4) || '-'  || SUBSTR(SAQUE.CD_DOC_IDENTF_CLIE, 13, 2)   
	ELSE SAQUE.CD_DOC_IDENTF_CLIE  
END  
|| '|' ||   
'Saque-Lote referente: ' || TO_CHAR(SAQUE.CD_LOTE)  || '|' || 
'Saque-Valor da Total: ' || TO_CHAR(VL_SAQUE, 'L999G999G999G990D99') || '|' ||    
'Saque-Quantidade: ' || TO_CHAR(Q_SAQUE) || '|' || 
'Saque-lista de saques: ' || SAQUES || '|' ||   
 
'Crédito-Valor da Total: ' || TO_CHAR(VL_CREDITO, 'L999G999G999G990D99') || '|' ||    
'Crédito-Quantidade: ' || TO_CHAR(Q_CREDITO) || '|' || 
'Crédito-Quantidade de origens diferentes: ' || TO_CHAR(QORIGENS_diferentes) || '|' || 
'Crédito-Documento de identificação das origens: ' || Origens || '|' || 
 
COALESCE((':DS-pm_ValorMinimo_PJ' || ' (' || ':NM-pm_ValorMinimo_PJ' || '):' || TO_CHAR(:pm_ValorMinimo_PJ, 'L999G999G999G990D99')),'Parâmetro não cadastrado') || '|' ||
COALESCE((':DS-pm_QtdeOrigemDistintasPJ' || ' (' || ':NM-pm_QtdeOrigemDistintasPJ' || '):' || :pm_QtdeOrigemDistintasPJ),'Parâmetro não cadastrado') || '|' 
AS DS_INF_ANLSE  
FROM ( 
SELECT MAX(CD_LOTE) CD_LOTE, MAX(NM_CLIE) NM_CLIE, CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE, SUM(VL_OPER) VL_SAQUE, 
xmlcast(  xmlagg(xmlelement(outros,  LTRIM(TO_CHAR(VL_OPER, 'L999G999G999G990D99'))  || '/ ')  order by VL_OPER) as clob) SAQUES,   
COUNT(*) Q_SAQUE   
FROM TB_TRANS_ANLSE  
WHERE DT_TRANS >=  to_date(to_char(:cd_lote), 'yyyy/mm')  
  AND DT_TRANS < add_months((to_date(to_char(:cd_lote), 'yyyy/mm')), 1)  
  AND CD_SUBLOTE = :cd_sublote
  AND CD_NATUR_OPER = 2 /*debito*/  
  AND CD_TP_OPER    = 7 /*saque*/  
  AND CD_FORMA_OPER = 7 /*especie*/  
  AND CD_TP_PESSOA  = 'J'  
  AND VL_OPER IS NOT NULL  
GROUP BY CD_DOC_IDENTF_CLIE, CD_TP_IDENTF_CLIE  
HAVING SUM(VL_OPER) > (:pm_ValorMinimo_PJ)  
) SAQUE  
INNER JOIN  
(SELECT T2.CD_DOC_IDENTF_CLIE, T2.CD_TP_IDENTF_CLIE, LISTAGG(TO_CHAR(T2.CD_DOC_IDENTF_DESTORIG), '/ ') WITHIN GROUP (ORDER BY T2.CD_DOC_IDENTF_CLIE desc) ORIGENS, COUNT(*) QORIGENS_diferentes, SUM(VL_CREDITO) VL_CREDITO, SUM(Q_CREDITO) Q_CREDITO 
 FROM (   
 SELECT T.CD_MES_ANO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, T.CD_DOC_IDENTF_DESTORIG, SUM(VL_OPER) VL_CREDITO, COUNT(*) Q_CREDITO
 FROM TB_TRANS T  
  WHERE T.DT_TRANS >=  to_date(to_char(:cd_lote), 'yyyy/mm')  
   AND T.DT_TRANS < add_months((to_date(to_char(:cd_lote), 'yyyy/mm')), 1)  
   AND T.CD_TP_PESSOA = 'J'
   AND T.FL_ANALISADO = 1  
   AND T.CD_DOC_IDENTF_DESTORIG IS NOT NULL 
   AND T.CD_DOC_IDENTF_CLIE <> T.CD_DOC_IDENTF_DESTORIG  
   AND T.CD_NATUR_OPER = 1  
   AND T.FL_ANALISADO = 1 
   AND T.CD_TP_OPER IN (5, 8, 9)  
 GROUP BY T.CD_MES_ANO, T.CD_DOC_IDENTF_CLIE, T.CD_TP_IDENTF_CLIE, T.CD_DOC_IDENTF_DESTORIG
  ) T2 
 GROUP BY T2.CD_DOC_IDENTF_CLIE, T2.CD_TP_IDENTF_CLIE 
 HAVING COUNT(*) > (:pm_QtdeOrigemDistintasPJ)    
 ) CREDITO 
 ON SAQUE.CD_DOC_IDENTF_CLIE = CREDITO.CD_DOC_IDENTF_CLIE AND SAQUE.CD_TP_IDENTF_CLIE = CREDITO.CD_TP_IDENTF_CLIE 
 